{"ast":null,"code":"var _jsxFileName = \"D:\\\\My course\\\\\\u0440\\u0435\\u043F\\u0430\\\\platform-course\\\\platfrom-course-front\\\\src\\\\components\\\\auth\\\\login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { SHA512 } from 'crypto-js';\nimport { useNavigate } from \"react-router-dom\";\nimport \"../Auth.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('Неправильний формат Email').required('Пошта є обовязковим полем'),\n  password: Yup.string().min(7, 'Мінімум 7 символів').max(22, 'Не більше 22 символів').matches(/[0-9]/, 'Повинен містити цифру').matches(/[a-zA-Z]/, 'Повинен містити букву').required('Введіть пароль'),\n  confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Паролі повинні збігатися').required('Підтвердіть пароль')\n});\nexport const Login = () => {\n  _s();\n  const navigation = useNavigate();\n  const LoginFunction = async values => {\n    const hashedPassword = SHA512(values.password).toString();\n    const body = {\n      email: values.email,\n      password: hashedPassword\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/user/login\", body);\n      const token = response.data.token;\n      localStorage.setItem('userToken', token);\n      navigation('/');\n    } catch (error) {\n      console.error('Помилка при авторизації:', error.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      validationSchema: validationSchema,\n      onSubmit: values => {\n        LoginFunction(values);\n      },\n      className: \"formik\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"label\",\n            children: \"\\u041F\\u043E\\u0448\\u0442\\u0430:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"label\",\n            children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            className: \"label\",\n            children: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"confirmPassword\",\n            component: \"div\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"7sZc5EvTsFMSo4mPTlyGC/0+rew=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","Yup","axios","SHA512","useNavigate","jsxDEV","_jsxDEV","validationSchema","object","shape","email","string","required","password","min","max","matches","confirmPassword","oneOf","ref","Login","_s","navigation","LoginFunction","values","hashedPassword","toString","body","response","post","token","data","localStorage","setItem","error","console","className","children","initialValues","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","component","_c","$RefreshReg$"],"sources":["D:/My course/репа/platform-course/platfrom-course-front/src/components/auth/login/Login.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from \"formik\";      \r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { SHA512 } from 'crypto-js';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../Auth.scss\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email('Неправильний формат Email')\r\n        .required('Пошта є обовязковим полем'),\r\n    password: Yup.string()\r\n        .min(7, 'Мінімум 7 символів')\r\n        .max(22, 'Не більше 22 символів')\r\n        .matches(/[0-9]/, 'Повинен містити цифру')\r\n        .matches(/[a-zA-Z]/, 'Повинен містити букву')\r\n        .required('Введіть пароль'),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Паролі повинні збігатися')\r\n        .required('Підтвердіть пароль'),\r\n})\r\n\r\nexport const Login = () =>{\r\n    const navigation = useNavigate()\r\n\r\n    const LoginFunction = async (values) => {\r\n        const hashedPassword = SHA512(values.password).toString();\r\n\r\n        const body = {\r\n          email: values.email,\r\n          password: hashedPassword,\r\n        };\r\n      \r\n        try {\r\n          const response = await axios.post(\"http://localhost:8080/api/user/login\", body);\r\n          const token = response.data.token\r\n          localStorage.setItem('userToken', token)\r\n          navigation('/')\r\n        } catch (error) {\r\n          console.error('Помилка при авторизації:', error.response.data); \r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"auth\">\r\n            \r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    confirmPassword: '',\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={values =>{\r\n                    LoginFunction(values)\r\n                }}\r\n                className=\"formik\"\r\n            >\r\n                <Form className=\"form\">\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"email\" className=\"label\">Пошта:</label>\r\n                        <Field type=\"email\" id=\"email\" name=\"email\" className=\"input\"/>\r\n                        <ErrorMessage name=\"email\" component=\"div\"className=\"error\"/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"password\" className=\"label\">Пароль:</label>\r\n                        <Field type=\"password\" id=\"password\" name=\"password\" className=\"input\"/>\r\n                        <ErrorMessage name=\"password\" component=\"div\" className=\"error\"/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"confirmPassword\" className=\"label\">Повторити пароль:</label>\r\n                        <Field type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" className=\"input\"/>\r\n                        <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"error\"/>\r\n                    </div>\r\n                    <button type=\"submit\">Увійти</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>    \r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}