{"ast":null,"code":"var _jsxFileName = \"D:\\\\My course\\\\\\u0440\\u0435\\u043F\\u0430\\\\platform-course\\\\platfrom-course-front\\\\src\\\\components\\\\lessons\\\\allLesson\\\\LessonBtn.jsx\",\n  _s = $RefreshSig$();\nimport \"./LessonBtn.scss\";\nimport { useContext, useState } from \"react\";\nimport { UserContext } from \"../../../Context/UserContext\";\nimport { GroupContext } from \"../../../Context/GroupContext\";\nimport { HmContext } from \"../../../Context/HmContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LessonBtn = ({\n  hmId,\n  group_id\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    group\n  } = useContext(GroupContext);\n  const {\n    hm,\n    setHm\n  } = useContext(HmContext);\n  const [homeworkText, setHomeworkText] = useState(\"\"); // Стан для зберігання тексту домашнього завдання\n  const [error, setError] = useState(\"\"); // Стан для відображення помилок валідації\n\n  const handleTextareaChange = event => {\n    setHomeworkText(event.target.value);\n    setError(\"\"); // Скидання помилок при зміні тексту\n  };\n\n  const handleSubmit = () => {\n    if (homeworkText.trim() === \"\") {\n      setError(\"Поле не може бути порожнім\");\n    } else {\n      const getGroup = async () => {\n        const user_id = user.id;\n        try {\n          const response = await axios.get(`http://localhost:8080/api/user/getUsersGroups/${user_id}`);\n          const groupData = response.data;\n          console.log(response.data);\n          setGroup(groupData);\n          setLoading(true);\n        } catch (error) {\n          console.error('Помилка при отриманні групи:', error.response);\n        }\n      };\n      setHomeworkText(\"\");\n      setError(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hm\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: homeworkText,\n      onChange: handleTextareaChange,\n      cols: \"30\",\n      rows: \"10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: handleSubmit,\n      children: \"Send Homework\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(LessonBtn, \"/OFmUqoLG16aj9PCh14Y3qrkAI0=\");\n_c = LessonBtn;\nvar _c;\n$RefreshReg$(_c, \"LessonBtn\");","map":{"version":3,"names":["useContext","useState","UserContext","GroupContext","HmContext","jsxDEV","_jsxDEV","LessonBtn","hmId","group_id","_s","user","group","hm","setHm","homeworkText","setHomeworkText","error","setError","handleTextareaChange","event","target","value","handleSubmit","trim","getGroup","user_id","id","response","axios","get","groupData","data","console","log","setGroup","setLoading","className","children","onChange","cols","rows","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/My course/репа/platform-course/platfrom-course-front/src/components/lessons/allLesson/LessonBtn.jsx"],"sourcesContent":["import \"./LessonBtn.scss\";\r\nimport { useContext, useState } from \"react\";\r\nimport { UserContext } from \"../../../Context/UserContext\";\r\nimport { GroupContext } from \"../../../Context/GroupContext\";\r\nimport { HmContext } from \"../../../Context/HmContext\";\r\n\r\nexport const LessonBtn = ({ hmId, group_id }) => {\r\n  const { user } = useContext(UserContext);\r\n  const { group } = useContext(GroupContext);\r\n  const { hm, setHm } = useContext(HmContext);\r\n  const [homeworkText, setHomeworkText] = useState(\"\"); // Стан для зберігання тексту домашнього завдання\r\n  const [error, setError] = useState(\"\"); // Стан для відображення помилок валідації\r\n\r\n  const handleTextareaChange = (event) => {\r\n    setHomeworkText(event.target.value);\r\n    setError(\"\"); // Скидання помилок при зміні тексту\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (homeworkText.trim() === \"\") {\r\n      setError(\"Поле не може бути порожнім\");\r\n    } else {\r\n        const getGroup = async () => {\r\n            const user_id = user.id\r\n            try {\r\n                \r\n                const response = await axios.get(`http://localhost:8080/api/user/getUsersGroups/${user_id}`\r\n                );\r\n                const groupData = response.data\r\n                console.log(response.data)\r\n                setGroup(groupData)\r\n                setLoading(true)\r\n            } catch (error) {\r\n                console.error('Помилка при отриманні групи:', error.response); \r\n            }\r\n        };\r\n      setHomeworkText(\"\");\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"hm\">\r\n      <textarea\r\n        value={homeworkText}\r\n        onChange={handleTextareaChange}\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n      ></textarea>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <div className=\"button\" onClick={handleSubmit}>\r\n        Send Homework\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"mappings":";;AAAA,OAAO,kBAAkB;AACzB,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,SAASC,YAAY,QAAQ,+BAA+B;AAC5D,SAASC,SAAS,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM;IAAEC;EAAK,CAAC,GAAGX,UAAU,CAACE,WAAW,CAAC;EACxC,MAAM;IAAEU;EAAM,CAAC,GAAGZ,UAAU,CAACG,YAAY,CAAC;EAC1C,MAAM;IAAEU,EAAE;IAAEC;EAAM,CAAC,GAAGd,UAAU,CAACI,SAAS,CAAC;EAC3C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC,MAAMkB,oBAAoB,GAAIC,KAAK,IAAK;IACtCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACnCJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;;EAED,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIR,YAAY,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC9BN,QAAQ,CAAC,4BAA4B,CAAC;IACxC,CAAC,MAAM;MACH,MAAMO,QAAQ,GAAG,MAAAA,CAAA,KAAY;QACzB,MAAMC,OAAO,GAAGf,IAAI,CAACgB,EAAE;QACvB,IAAI;UAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAE,iDAAgDJ,OAAQ,EAC1F,CAAC;UACD,MAAMK,SAAS,GAAGH,QAAQ,CAACI,IAAI;UAC/BC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACI,IAAI,CAAC;UAC1BG,QAAQ,CAACJ,SAAS,CAAC;UACnBK,UAAU,CAAC,IAAI,CAAC;QACpB,CAAC,CAAC,OAAOnB,KAAK,EAAE;UACZgB,OAAO,CAAChB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACW,QAAQ,CAAC;QACjE;MACJ,CAAC;MACHZ,eAAe,CAAC,EAAE,CAAC;MACnBE,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,oBACEZ,OAAA;IAAK+B,SAAS,EAAC,IAAI;IAAAC,QAAA,gBACjBhC,OAAA;MACEgB,KAAK,EAAEP,YAAa;MACpBwB,QAAQ,EAAEpB,oBAAqB;MAC/BqB,IAAI,EAAC,IAAI;MACTC,IAAI,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACX5B,KAAK,iBAAIX,OAAA;MAAG+B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAErB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CvC,OAAA;MAAK+B,SAAS,EAAC,QAAQ;MAACS,OAAO,EAAEvB,YAAa;MAAAe,QAAA,EAAC;IAE/C;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnC,EAAA,CAjDWH,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}