{"ast":null,"code":"var _jsxFileName = \"D:\\\\My course\\\\\\u0440\\u0435\\u043F\\u0430\\\\platform-course\\\\platfrom-course-front\\\\src\\\\components\\\\lessons\\\\allLesson\\\\LessonBtn.jsx\",\n  _s = $RefreshSig$();\nimport \"./LessonBtn.scss\";\nimport { useContext, useState } from \"react\";\nimport { UserContext } from \"../../../Context/UserContext\";\nimport { GroupContext } from \"../../../Context/GroupContext\";\nimport { HmContext } from \"../../../Context/HmContext\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LessonBtn = ({\n  hmId,\n  groupId\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    group\n  } = useContext(GroupContext);\n  const {\n    hm,\n    setHm\n  } = useContext(HmContext);\n  const [homeworkText, setHomeworkText] = useState(\"\"); // Стан для зберігання тексту домашнього завдання\n  const [error, setError] = useState(\"\"); // Стан для відображення помилок валідації\n\n  const handleTextareaChange = event => {\n    setHomeworkText(event.target.value);\n    setError(\"\"); // Скидання помилок при зміні тексту\n  };\n\n  const sendHm = async body => {\n    try {\n      const response = await axios.post(`http://localhost:8080/api/hm/user/sendHomework`, body, {\n        withCredentials: true\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error('Помилка при ', error.response);\n    }\n  };\n  const handleSubmit = () => {\n    if (homeworkText.trim() === \"\") {\n      setError(\"Поле не може бути порожнім\");\n    } else {\n      const body = {\n        user_id: user.id,\n        group_id: groupId,\n        lesson_number: hmId,\n        content: homeworkText\n      };\n      console.log(body);\n      sendHm(body);\n      setHomeworkText(\"\");\n      setError(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hm\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: homeworkText,\n      onChange: handleTextareaChange,\n      cols: \"30\",\n      rows: \"10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: handleSubmit,\n      children: \"Send Homework\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(LessonBtn, \"AtAmc9RHlaTE+Qftijl4hUQCJAs=\");\n_c = LessonBtn;\nvar _c;\n$RefreshReg$(_c, \"LessonBtn\");","map":{"version":3,"names":["useContext","useState","UserContext","GroupContext","HmContext","axios","jsxDEV","_jsxDEV","LessonBtn","hmId","groupId","_s","user","group","hm","setHm","homeworkText","setHomeworkText","error","setError","handleTextareaChange","event","target","value","sendHm","body","response","post","withCredentials","console","log","data","handleSubmit","trim","user_id","id","group_id","lesson_number","content","className","children","onChange","cols","rows","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/My course/репа/platform-course/platfrom-course-front/src/components/lessons/allLesson/LessonBtn.jsx"],"sourcesContent":["import \"./LessonBtn.scss\";\r\nimport { useContext, useState } from \"react\";\r\nimport { UserContext } from \"../../../Context/UserContext\";\r\nimport { GroupContext } from \"../../../Context/GroupContext\";\r\nimport { HmContext } from \"../../../Context/HmContext\";\r\nimport axios from 'axios';\r\n\r\nexport const LessonBtn = ({ hmId, groupId }) => {\r\n    const { user } = useContext(UserContext);\r\n    const { group } = useContext(GroupContext);\r\n    const { hm, setHm } = useContext(HmContext);\r\n    const [ homeworkText, setHomeworkText] = useState(\"\"); // Стан для зберігання тексту домашнього завдання\r\n    const [ error, setError ] = useState(\"\"); // Стан для відображення помилок валідації\r\n\r\n    const handleTextareaChange = (event) => {\r\n        setHomeworkText(event.target.value);\r\n        setError(\"\"); // Скидання помилок при зміні тексту\r\n    };\r\n\r\n\r\n    const sendHm = async (body) => {\r\n        try {            \r\n            const response = await axios.post(`http://localhost:8080/api/hm/user/sendHomework`, body, { withCredentials: true });\r\n            console.log(response.data)\r\n        } catch (error) {\r\n            console.error('Помилка при ', error.response); \r\n        }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        if (homeworkText.trim() === \"\") {\r\n        setError(\"Поле не може бути порожнім\");\r\n        } else {\r\n            const body = {\r\n                user_id: user.id,\r\n                group_id: groupId,\r\n                lesson_number: hmId,\r\n                content: homeworkText\r\n            }\r\n            console.log(body)\r\n            sendHm(body)\r\n        setHomeworkText(\"\");\r\n        setError(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"hm\">\r\n            <textarea\r\n                value={homeworkText}\r\n                onChange={handleTextareaChange}\r\n                cols=\"30\"\r\n                rows=\"10\"\r\n            ></textarea>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            <div className=\"button\" onClick={handleSubmit}>\r\n                Send Homework\r\n            </div>\r\n        </div>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}